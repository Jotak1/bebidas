{"version":3,"sources":["context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","components/Header.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","categoriasAx","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","e","target","name","className","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","Header","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","scroll","maxHeight","overflowY","overflowX","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525050c1.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n\r\n\r\n// Crear el context\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentrar las funciones y state\r\nconst CategoriasProvider = (props) => {\r\n\r\n    // crear el state del Context\r\n    const [ categorias, guardarCategorias] = useState([]);\r\n\r\n    // ejecutar el llamado a la api\r\n    useEffect(()=>{\r\n        const obtenerCategorias = async () => {\r\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\r\n            const categoriasAx = await axios.get(url);\r\n            guardarCategorias(categoriasAx.data.drinks);\r\n        }    \r\n        obtenerCategorias();\r\n    },[]);\r\n    return (\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n}\r\nexport default CategoriasProvider;","import axios from 'axios';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n\r\n    const [recetas, guardarRecetas] = useState([]);\r\n    const [busqueda, buscarRecetas] = useState({\r\n        nombre: '',\r\n        categoria: ''\r\n    });\r\n    const [consultar, guardarConsultar] = useState(false);\r\n\r\n    const { nombre, categoria} = busqueda;\r\n\r\n    useEffect(()=>{\r\n        if(consultar){\r\n            const obtenerRecetas = async () => {\r\n                const url =`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n                const resultado = await axios.get(url);\r\n                \r\n                guardarRecetas(resultado.data.drinks);\r\n            }\r\n            obtenerRecetas();\r\n        }\r\n        \r\n    },[busqueda]);\r\n\r\n    return ( \r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default RecetasProvider;","import React, {useContext,useState} from 'react';\r\nimport {CategoriasContext} from '../context/CategoriasContext';\r\nimport { RecetasContext } from '../context/RecetasContext';\r\n\r\nconst Formulario = () => {\r\n\r\n    const [ busqueda, guardarBusqueda] = useState({\r\n        nombre: '',\r\n        categoria: ''\r\n    })\r\n    const { categorias } = useContext(CategoriasContext);\r\n    const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n\r\n    // funcion para leer los contenidos\r\n    const obtenerDatosReceta = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            className='col-12'\r\n            onSubmit={e=>{\r\n                e.preventDefault();\r\n                buscarRecetas(busqueda);\r\n                guardarConsultar(true);\r\n            }}\r\n        >\r\n            <fieldset className=\"text-center\">\r\n                <legend>Busca bebidas por Categoria o Ingrediente</legend>\r\n            </fieldset>\r\n            <div className='row mt-4'>\r\n                <div className='col-md-4'>\r\n                    <input\r\n                        name='nombre'\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder=\"Buscar por Ingrediente\"\r\n                        onChange={obtenerDatosReceta}\r\n                    />\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <select\r\n                        className='form-control'\r\n                        name='categoria'\r\n                        onChange={obtenerDatosReceta}\r\n                    >\r\n                        <option value=\"\">-- Selecciona Categoria --</option>\r\n                        {categorias.map(categoria => (\r\n                            <option \r\n                                key={categoria.strCategory} \r\n                                value={categoria.strCategory}\r\n                            >{categoria.strCategory}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='col-md-4'>\r\n                    <input\r\n                       type='submit'\r\n                       className='btn btn-block btn-primary' \r\n                        value=\"Buscar Bebidas\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className='bg-alert'>\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import axios from 'axios';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n\r\n// crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n    //state del provider\r\n    const [ idreceta, guardarIdReceta] = useState(null);\r\n    const [ informacion, guardarReceta] = useState({})\r\n\r\n    // llamar la api\r\n\r\n    useEffect(() => {\r\n        const obtenerReceta= async () => {\r\n            if(!idreceta) return;\r\n\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n            \r\n            const resultado = await axios.get(url);\r\n            guardarReceta(resultado.data.drinks[0]);\r\n        }\r\n        obtenerReceta();\r\n    }, [idreceta])\r\n\r\n    return (  \r\n        <ModalContext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    );\r\n}\r\n \r\nexport default ModalProvider;","import React, { useContext, useState } from 'react';\r\nimport { ModalContext } from '../context/ModalContext';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    scroll: { maxHeight: '500px', overflowY: 'scroll', overflowX: 'none' }\r\n}));\r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    //configuracion del modal del material-ui\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open,setOpen] =useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    // extraer los valores del context\r\n    const { informacion, guardarIdReceta, guardarReceta } = useContext(ModalContext);\r\n\r\n    // muestra y formatea los ingredientes\r\n    const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i< 16; i++){\r\n            if( informacion[`strIngredient${i}`]){\r\n                ingredientes.push(\r\n                    <li>{informacion[`strIngredient${i}`] } {informacion[`strMeasure${i}`] }</li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes;\r\n    }\r\n\r\n    return (  \r\n        <div className='col-md-4 mb-3'>\r\n            <div className='card'>\r\n                <h2 className='card-header'>{receta.strDrink}</h2>\r\n                <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} />\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className='btn btn-block btn-primary'\r\n                        onClick={()=>{\r\n                            guardarIdReceta(receta.idDrink);\r\n                            handleOpen();\r\n                        }}\r\n                    >\r\n                        Ver Receta\r\n                    </button>\r\n\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={()=> {\r\n                            guardarIdReceta(null);\r\n                            handleClose();\r\n                            guardarReceta({});\r\n                        }}\r\n                    >\r\n                        <div style={modalStyle} className={`${classes.paper} ${classes.scroll}`}>\r\n                            <h2>{informacion.strDrink}</h2>\r\n                            <h3 className='mt-4'>Instrucciones</h3>\r\n                            <p>\r\n                                {informacion.strInstructions}\r\n                            </p>\r\n                            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} />\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                            <ul>\r\n                                {mostrarIngredientes(informacion)}\r\n                            </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Receta;","import React, { useContext } from 'react';\r\nimport { RecetasContext } from '../context/RecetasContext';\r\nimport Receta from './Receta';\r\n\r\nconst ListaRecetas = () => {\r\n    // extraer las receras\r\n    const {recetas} = useContext(RecetasContext);\r\n\r\n    return ( \r\n        <div className='row mt-5'>\r\n                {recetas.map(receta=>(\r\n                    <Receta\r\n                        key={receta.idDrink}\r\n                        receta={receta}\r\n                    />\r\n                ))}\r\n        </div> \r\n    );\r\n}\r\n \r\nexport default ListaRecetas;","import React from 'react';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport ListaRecetas from './components/ListaRecetas';\nimport CategoriasProvider from './context/CategoriasContext';\nimport ModalProvider from './context/ModalContext';\nimport RecetasProvider from './context/RecetasContext';\n\n\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header/>\n          <div className=\"container mt-5\">\n            <div className='row'>\n              <Formulario/>\n            </div>\n            <ListaRecetas/>\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}